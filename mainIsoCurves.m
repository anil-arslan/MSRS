%%% AnÄ±l ARSLAN 2303980
clc; %clear; close all;
addpath(genpath([pwd '/library']));
set(groot, "defaultFigurePosition", [680 458 560 420]);

scanPos = linspace(-20, 20, 101)*1e3;

arrayRX = uniformPlanarArray( ...
    "numberOfElements", [1 20], ...
    "rpm", 0);
arrayTX = uniformPlanarArray( ...
    "numberOfElements", [1 20], ...
    "rpm", 0);

receivers = receivingNode( ...
    'position', [-physconst('LightSpeed')*3e-5; -5e3; 0], ...
    'CPIsecond', 0.25*1e-3, ...
    'samplingFrequency', 1e6, ...
    'array', arrayRX);

transmitters = transmittingNode( ...
    'position', [physconst('LightSpeed')*3e-5; -5e3; 0], ...
    'array', arrayTX, ...
    'peakPower_W', 40e3, ...
    'carrierFrequency', 1e9, ...
    'pulseWidth', 10e-6);
transmitters.setLFM( ...
    "bandWidth", 1e6, ...
    "frequencyDirection", "symmetric", ...
    "frequencyOffset", 0);

transmitters.array.setscanparameters("backOfArray", true);
receivers.array.setscanparameters("backOfArray", true);

network = radarNetwork( ...
    'receivingNodes', receivers, ...
    'transmittingNodes', transmitters);

targets = target( ...
    'y', scanPos, ...
    'x', scanPos, ...
    'velocity', [25; -25; 0], ...
    'meanRCS_dbsm', 10*log10(5));

int = interface( ...
    'network', network, ...
    'targets', targets);
%%
int.visualizeisocurves( ...
    'curves', ["delay", "power", "doppler", "bistaticAngle"], ...
    "saveFigure", 0);