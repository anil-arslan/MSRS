%%% AnÄ±l ARSLAN 2303980
clc; clear; % close all;
addpath(genpath([pwd '/library']));

d = 1e3;
posMonostatic = [0; 0; 0];
% posMultistatic = [posMonostatic, [0 -2*d 2*d; 0 d d; 0 0 0]];
posMultistatic = [[-2*d -d; 0 0; 0 0], posMonostatic, [d 2*d; 0 0; 0 0]];

arrayRX = planarArray( ...
    "numberOfElements", [11 1], ...
    "numberOfElements", [1 1], ...
    "rpm", 0);
arrayTX = planarArray( ...
    "numberOfElements", [5 1], ...
    "numberOfElements", [1 1], ...
    "rpm", 0);

receivers = receivingNode( ...
    'position', posMultistatic, ...
    'position', posMultistatic, ...
    'array', arrayRX, ...
    'samplingFrequency', 2e6, ... 5e6, ... 2e7
    'CPIsecond', 10e-6); % 15e-6
% receivers.settingsreceiver("beamformingMode", "bypass");
% receivers.setbeamcenters("beamCentersAzimuth", -5 : 5 : 5);

transmitters = transmittingNode( ...
    'position', posMultistatic, ...
    'array', arrayTX, ...
    'inputPower_W', 1e3, ...
    'carrierFrequency', 1e9, ...
    'pulseWidth', 5e-7); % 1e-6
transmitters.setLFM( ...
    "bandWidth", 1e6, ... 5e6
    "frequencyDirection", "decreasing");

transmitterArrays = [transmitters.array];
receiverArrays = [receivers.array];

% transmitterArrays.setorientation( ...
%     "yaw", [45 135 90 0 180], ...
%     "scanDirection", ["ccw" "cw" "cw" "cw" "cw"]);
% receiverArrays.setorientation( ...
%     "yaw", [45 135 90 0 180], ...
%     "scanDirection", ["ccw" "cw" "cw" "cw" "cw"]);

transmitterArrays.setorientation("yaw", 90);
receiverArrays.setorientation("yaw", 90);

network = radarNetwork( ...
    'receivingNodes', receivers, ...
    'transmittingNodes', transmitters);
network.settingsnetwork( ...
    "networkMode", "multiStatic", ...
    'fractionalDelayMode', 'off', ...
    'fractionalDelayMode', 'sinc-based', ...
    "beamTime", 1e-2);
network.activitycontrol( ...
    "transmittingNodeActivity", [0 0 1 0 0], ...
    "receivingNodeActivity", [1 1 1 1 1]);
network.setsurveillance("staticBeam");
network.setsynchronization( ...
    "timeOffsetBistaticPairs", 0, ...
    "timeDeviationBistaticPairs", 1e-6, ... 1e-6
    "frequencyOffsetBistaticPairs", 0, ...
    "frequencyDeviationBistaticPairs", 0 ... 5e8
    );

targets = target( ...
    ...'position', [-d/2 0 d/2 -d; d/2 d 3*d/2 d; 0 0 0 0].*(.9 + 0.2*rand(3, 4)), ...
    ...'position', [-d/2 0 d/2; d/2 d 3*d/2; 0 0 0], ...
    ...'position', [-d/2 -d d/2; d/2 d 3*d/2; 0 0 0], ...
    'position', [-d/2 d/2; d/2 3*d/2; 0 0], ...
    ...'position', [d/2; 3*d/2; 0], ...
    ...'position', [d/2; d/2; 0], ...
    ...'position', [-3*0.0484434*d; 0.0515566*d; 0], ...
    ...'position', [-0.0484434*d; 30*0.0515566*d; 0], ...
    ...'position', [-3*0.0484434*d; 10*0.0515566*d; 0], ...
    'meanRCS_dbsm', 10, ...
    'velocity', [0; -0*d/2; 0]);
int = interface( ...
    'network', network, ...
    'targets', targets);
int.configure( ...
    'noise', 1, ...
    'directPath', 0, ...
    "pathLoss", 1, ...
    "timeSynchronization", 0, ...
    "frequencySynchronization", 1, ...
    'spatialCoherency', 'incoherent', ...
    'swerling', 1);

sp = spu( ...
    "interfaces", int, ...
    "gridResolution", [100 100 6000]);
sp.setintegrationindices;
sp.configure( ...
    "PFA", 1e-6, ...
    "processingAlgorithm", 6, ...
    "detectionAlgorithm", "thresholding", ...
    "detectionAlgorithm", "peak", ...
    "detectionAlgorithm", "OMPjoint", ... 
    "numberOfTargets", nan, ...
    "neighbourOffset", 1, ...
    "seed", 0, ...
    "seedShuffle", 0, ...
    "numberOfTrials", 100, ...
    'numberOfTrialsParallel', 1, ...
    'numberOfTrialsParallel', 100);

%%
% arrayRX.visualizearray;
% arrayTX.visualizearray;
% network.visualizenetwork;
% int.visualizescenario("showPattern", 1);
% int.visualizereceivedsignals;
% int.visualizebeamformedsignals;
% sp.visualizefilteredsignals("trialID", 1);
% figID = 50;
% sp.configure( ...
%     "seed", 0, ...
%     "neighbourOffset", 1);
% sp.applycompression( ...
%     "saveResiduals", 1);
% sp.visualizeintegratedsignals( ...
%     "figureID", figID + 2, ...,
%     "iterationID", 1, ...
%     "trialID", 38, ...
%     "plotMode", "image");
% sp.visualizecompression( ...
%     "figureID", figID + 100, ...
%     "trialID", 1);
%%
% sp.setmatchfilteredsignals;
% sp.visualizeintegratedsignals( ...
%     "figureID", 5140, ...,
%     "trialID", 1);
% sp.visualizeestimation;
%%
% [PD, PFA] = sp.simulatedetection;
sp.configure( ...
    "seed", 0, ...
    "neighbourOffset", 100, ...
    "numberOfTrials", 1, ...
    "numberOfTrialsParallel", 1000);
sp.simulatecoverage( ...
    "meanRCS_dbsm", 0, ...
    "onCellCenters", 1);
sp.visualizecoveragesimulation( ...
    "saveDirectory", "figures/multiStatic/centerOfCell/senkron", ...
    "saveDirectory", "figures/multiStatic/randomInCell/senkron", ...
    "saveDirectory", "figures/multiStatic/centerOfCell/asenkron", ...
    ..."saveDirectory", "figures/multiStatic/randomInCell/asenkron", ...
    "saveFigures", 1 ...
    );
%%
% sp.visualizereceiveroperatingcharacteristics;
% sp.visualizedetectioncharacteristics("PFA", 1e-4);
%%
% tic;
% detection = sp.startsimulation("duration", 0.5);
% toc
%%
% sp.configure("processingAlgorithm", 2);
% sp.visualizedetectioncharacteristics("PFA", 1e-6);
% sp.configure("processingAlgorithm", 6);
% sp.visualizedetectioncharacteristics("PFA", 1e-6);